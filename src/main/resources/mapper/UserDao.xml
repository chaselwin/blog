<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chasel.blog.dao.IUserDao">
  
  <sql id="authBaseSql">
  	SELECT 
	  	a.id id,
	  	a.user_id userId,
	  	a.identity_type identityType,
	  	a.identifier identifier,
	  	a.credential credential,
	  	a.create_time createTime,
	  	a.update_time updateTime
  	FROM t_user_auth a
  </sql>
  
  <sql id="userBaseSql">
  	SELECT 
	  	u.id id,
	  	u.account account,
	  	u.nick_name nickName,
	  	u.phone phone,
	  	u.email email,
	  	u.role role,
	  	u.create_time createTime,
	  	u.update_time updateTime
  	FROM t_user u
  </sql>
  
  <!-- 登录查询 -->
  <select id="login" parameterType="String" resultType="com.chasel.blog.vo.UserAuth">
  	<include refid="authBaseSql"></include>
	WHERE a.identity_type=#{identityType} AND a.identifier=#{identifier}
  </select>
  
  <!-- 根据userID查询用户信息 -->
  <select id="findById" parameterType="long" resultType="com.chasel.blog.vo.User">
  	<include refid="userBaseSql"></include>
	WHERE u.id=#{id}
  </select>
  
  <!-- 用户注册：用户表 -->
  <insert id="save" parameterType="com.chasel.blog.vo.User" useGeneratedKeys="true" keyProperty="id">
  	INSERT INTO t_user
  	(
	  	account,
	  	nick_name,
	  	phone,
	  	email,
	  	role,
	  	create_time,
	  	update_time
  	)
  	VALUES
  	(
	  	#{account,jdbcType=VARCHAR},
	  	#{nickName,jdbcType=VARCHAR},
	  	#{phone,jdbcType=VARCHAR},
	  	#{email,jdbcType=VARCHAR},
	  	#{role,jdbcType=VARCHAR},
	  	now(),
	  	now()
	)
  </insert>
  
  <!-- 用户注册：标识表 -->
  <insert id="saveUserAuth" parameterType="com.chasel.blog.vo.UserAuth">
  	INSERT INTO t_user_auth
  	(
	  	user_id,
	  	identity_type,
	  	identifier,
	  	credential,
	  	create_time,
	  	update_time
  	)
  	VALUES
  	(
	  	#{userId},
	  	#{identityType,jdbcType=VARCHAR},
	  	#{identifier,jdbcType=VARCHAR},
	  	#{credential,jdbcType=VARCHAR},
	  	now(),
	  	now()
	)
  </insert>
  
  <!-- 根据account and nickName查询用户信息 -->
  <select id="queryUserByAccountAndNickName" parameterType="String" resultType="com.chasel.blog.vo.User">
  	<include refid="userBaseSql"></include>
	<where>
		<if test='account!=null and account!=""'>
			account = #{account}
		</if>
		<if test='nickName!=null and nickName!=""'>
			nick_name = #{nickName}
		</if>
	</where> 
  </select>
  
  <select id="findAll" resultType="com.chasel.blog.vo.User">
  	<include refid="userBaseSql"></include>
  	<where>
  		1=1
	  	<if test='id!=null and id!=""'>
	  		AND id=#{id,jdbcType=INTEGER}
	  	</if>
	  	<if test='account!=null and account!=""'>
	  		AND account LIKE CONCAT(CONCAT('%',#{account,jdbcType=VARCHAR}),'%')
	  	</if>
	  	<if test='name!=null and name!=""'>
	  		AND name LIKE CONCAT(CONCAT('%',#{name,jdbcType=VARCHAR}),'%')
	  	</if>
  	</where>
  </select>
  
  <delete id="delete" parameterType="int">
  	DELETE FROM t_user WHERE id=#{id}
  </delete>
  
  <update id="update" parameterType="com.chasel.blog.vo.User">
  	UPDATE t_user
  	<set> 
  		<if test="null != password and '' != password">password=#{password,jdbcType=VARCHAR},</if>
  		<if test="null != name and '' != name">name=#{name,jdbcType=VARCHAR},</if>
  	</set>
  	WHERE id=#{id}
  </update>
  
</mapper>